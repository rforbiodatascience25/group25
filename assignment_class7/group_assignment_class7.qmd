---
title: "group_assignment_class7"
format: html
editor: visual
---

```{r}
#| message: false
library("tidyverse")
library("here")
library("broom")
library("cowplot")
```

# Load, Clean and Augment Data

```{r}
data_file <- here("gravier.RData")
```

```{r}
load(file = data_file)
```

```{r}
gravier_clean <- gravier |>
  bind_cols() |>
  as_tibble()

gravier_clean_aug <- gravier_clean |>
  relocate(outcome = y)
```

```{r}
gravier_clean_aug
```

# PCA Analysis

In general, when performing PCA, weâ€™ll want to do (at least) three things:

1.  Look at the data in PC coordinates.

2.  Look at the rotation matrix.

3.  Look at the variance explained by each PC.

```{r}
pca_fit <- gravier_clean_aug |> 
  select(where(is.numeric)) |>  #  columns except class column
  prcomp(scale = TRUE) # do PCA on scaled data
```

```{r}
pca_fit |> 
  augment(gravier_clean_aug) %>% # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2, color = outcome)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(poor = "#D55E00", good = "#0072B2")
  ) +
  theme_half_open(12) + background_grid()
```

## Look at the data in PC coordinates

```{r}
# extract rotation matrix
pca_fit %>%
  tidy(matrix = "rotation")
```

In the PCA applied to your dataset with 2,906 variables and 168 samples, the number of principal components is limited by the smaller dimension, which is the number of samples (168), rather than the number of variables. This means PCA can produce at most 168 principal components, each representing a linear combination of the original variables that explain decreasing amounts of variance. This dimensionality reduction simplifies the data while preserving most of its variability. Typically, the first few components capture the majority of the meaningful information, enabling effective visualization and analysis.

This behavior is expected because PCA decomposes variance structure constrained by the number of observations, not variables, in high-dimensional data.

```{r}
# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# plot rotation matrix
pca_fit |> 
  tidy(matrix = "rotation") |> 
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |> 
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed() + # fix aspect ratio to 1:1
  theme_minimal_grid(12)
```

The plot appears cluttered because it is displaying 160 vectors (one per principal component), which causes extreme overlap and makes individual vectors indistinguishable. **Solve this**

## Look at the variance explained by each PC

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues")
```

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  theme_minimal_hgrid(12)
```

The first component captures 8% of the variation in the data.
